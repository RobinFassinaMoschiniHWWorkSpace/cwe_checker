initSidebarItems({"mod":[["backward_interprocedural_fixpoint","Creating and computing backward interprocedural fixpoint problems."],["dead_variable_elimination","This module contains a fixpoint computation to compute alive (resp. dead) variables and a function to remove dead assignments from a project."],["fixpoint","Creating and computing generic fixpoint computations."],["forward_interprocedural_fixpoint","Creating and computing forward interprocedural fixpoint problems."],["function_signature","A fixpoint algorithm computing parameters of functions and their access patterns."],["graph","Generate control flow graphs out of a program term."],["interprocedural_fixpoint_generic","Types and functions shared between the implementations of forward and backward interprocedural fixpoint computations."],["pointer_inference","A fixpoint algorithm analyzing all memory accesses in a program."],["stack_alignment_substitution","Substitutes stack pointer alignment operations utilising logical AND with an arithmetic SUB operation."],["string_abstraction","A fixpoint analysis that abstracts strings in the program using various string abstract domains. These include the Character Inclusion Domain and Bricks Domain among others."],["vsa_results","This module provides the [`VsaResult`] trait which defines an interface for the results of analyses similar to a value set analysis."]]});