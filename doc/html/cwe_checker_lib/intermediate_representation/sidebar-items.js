initSidebarItems({"enum":[["Arg","A parameter or return argument of a function."],["BinOpType","The type/mnemonic of a binary operation. See the Ghidra P-Code documentation for more information."],["CastOpType","The type/mnemonic of a typecast See the Ghidra P-Code documentation for more information."],["Datatype","C/C++ data types."],["Def","A side-effectful operation. Can be a register assignment or a memory load/store operation."],["Expression","An expression is a calculation rule on how to compute a certain value given some variables (register values) as input."],["Jmp","A `Jmp` instruction affects the control flow of a program, i.e. it may change the instruction pointer. With the exception of `CallOther`, it has no other side effects."],["UnOpType","The type/mnemonic of an unary operation See the Ghidra P-Code documentation for more information."]],"struct":[["Blk","A basic block is a sequence of `Def` instructions followed by up to two `Jmp` instructions."],["ByteSize","An unsigned number of bytes."],["CallingConvention","Calling convention related data"],["DatatypeProperties","Properties of C/C++ data types such as size."],["ExternSymbol","An extern symbol represents a funtion that is dynamically linked from another binary."],["Program","The `Program` structure represents a disassembled binary."],["Project","The `Project` struct is the main data structure representing a binary."],["RuntimeMemoryImage","A representation of the runtime image of a binary after being loaded into memory by the loader."],["Sub","A `Sub` or subroutine represents a function with a given name and a list of basic blocks belonging to it."],["Term","A term is an object inside a binary with an address and an unique ID (both contained in the `tid`)."],["Tid","A term identifier consisting of an ID string (which is required to be unique) and an address to indicate where the term is located."],["Variable","A variable represents a register with a known size and name."]],"trait":[["BitvectorExtended","A trait to extend the bitvector type with useful helper functions that are not contained in the [`apint`] crate."]],"type":[["Bitvector","A bitvector is a fixed-length vector of bits with the semantics of a CPU register, i.e. it supports twoâ€™s complement modulo arithmetic."]]});