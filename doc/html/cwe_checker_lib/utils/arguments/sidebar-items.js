initSidebarItems({"fn":[["calculate_parameter_locations","Calculates the register and stack positions of format string parameters. The parameters are then returned as an argument vector for later tainting."],["create_string_register_arg","Creates a string register parameter given a register name."],["create_string_stack_arg","Creates a string stack parameter given a size and stack offset."],["get_input_format_string","Parses the input format string for the corresponding string function."],["get_return_registers_from_symbol","Returns all return registers of a symbol as a vector of strings."],["get_variable_number_parameters","Returns an argument vector of detected variable parameters if they are of type string."],["is_float","Checks whether the format specifier is of type float."],["is_integer","Checks whether the format specifier is of type int."],["is_pointer","Checks whether the format specifier is of type pointer."],["is_string","Checks whether the format specifier is a string pointer or a string."],["map_format_specifier_to_bytesize","Maps a given format specifier to the bytesize of its corresponding data type."],["parse_format_string_destination_and_return_content","Parses the destiniation address of the format string. It checks whether the address points to another pointer in memory. If so, it will use the target address of that pointer read the format string from memory."],["parse_format_string_parameters","Parses the format string parameters using a regex, determines their data types, and calculates their positions (register or memory)."]]});